<?xml version="1.0" encoding="utf-8"?>
<topic id="6eaaa932-6e58-4f05-82be-6bb1a0403612" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>This section provides some general information about the usage of the Portable WebDAV Library.</para>
    </introduction>

    <section>
      <title>Required app capabilities</title>
      <content>
        <para>To be able to use the Portable WebDAV Library in an (UWP) app, the capability <legacyItalic>Private Networks (Client &amp; Server)</legacyItalic> has to be specified in app's manifest (<legacyItalic>Package.appxmanifest</legacyItalic>).
        When this capability is missing, an exception will be thrown when trying to access WebDAV resources.
      </para>
        <mediaLink>
          <image xlink:href="AppCapabilities"/>
        </mediaLink>
      </content>
    </section>

    <section>
      <title>Using the library with expired/untrusted SSL certificates</title>
      <content>
        <para>
          The Portable WebDAV Library can also be used with WebDAV servers which use expired/untrusted certificates. This is a common scenario when using self-signed certificates, as these are not trusted.
        </para>
        <para>
          <legacyBold>Important:</legacyBold> It is up to the app using the Portable WebDAV Library to specify which certificate errors should be ignored. This can be accomplished by using the ServerCertificateValidationCallback of the ServicePointManager and specifying the SSL errors which should be ignored.
        </para>
        <para>
          See the following example using a WebDavSession:
        </para>
        <code language="c#">
        <![CDATA[
// Use the ServicePointManager.ServerCertificateValidationCallback to ignore certificate errors.
// This call should be done before trying to access any WebDAV resources, otherwise an exception will be thrown.
ServicePointManager.ServerCertificateValidationCallback += (object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors) =>
{
    // Specify which certificate errors should be ignored.
    if (sslPolicyErrors == SslPolicyErrors.RemoteCertificateNotAvailable)
	    return true;
    else
	    return false;
};

// The base URL (HTTPS) of the WebDAV server.
var webDavServerUrl = @"https://www.myserver.com/webdav/";

// Specify the user credentials.
var credentials = new NetworkCredential("MyUsername", "MyPassword");

// Create a WebDavSession with the HttpBaseProtocolFilter.
var webDavSession = new WebDavSession(webDavServerUrl, credentials);

var items = await webDavSession.ListAsync(@"MyFolder/");

foreach (var item in items)
{
    // Handle the response (list of WebDavSessionListItems).
}

webDavSession.Dispose();
          ]]>
        </code>
      </content>
    </section>

    <relatedTopics>
      
    </relatedTopics>
  </developerConceptualDocument>
</topic>
