<?xml version="1.0" encoding="utf-8"?>
<topic id="ccea8090-12aa-4576-b835-5895ea28629d" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>
        The Portable WebDAV Library can also be used with WebDAV servers which use expired/untrusted certificates. This is a common scenario when using self-signed certificates, as these are not trusted.
      </para>
    </introduction>

    <section>
      <content>
        <para>
          <legacyBold>Important:</legacyBold> It is up to the app using the Portable WebDAV Library to specify which certificate errors should be ignored. This can be accomplished by using the ServerCertificateValidationCallback of the ServicePointManager and specifying the SSL errors which should be ignored.
        </para>
        <para>
          See the following example using a WebDavSession with untrusted SSL certificates (.NET Framework):
        </para>
        <code language="c#">
          <![CDATA[
// Use the ServicePointManager.ServerCertificateValidationCallback to ignore certificate errors.
// This call should be done before trying to access any WebDAV resources, otherwise an exception will be thrown.
ServicePointManager.ServerCertificateValidationCallback += (object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors) =>
{
    // Specify which certificate errors should be ignored.
    if (sslPolicyErrors == SslPolicyErrors.RemoteCertificateNotAvailable)
        return true;
    else
        return false;
};

// The base URL (HTTPS) of the WebDAV server.
var webDavServerUrl = @"https://www.myserver.com/webdav/";

// Specify the user credentials.
var credentials = new NetworkCredential("MyUsername", "MyPassword");

// Create a WebDavSession with the HttpBaseProtocolFilter.
using (var webDavSession = new WebDavSession(webDavServerUrl, credentials))
{
    var items = await webDavSession.ListAsync(@"MyFolder/");

    foreach (var item in items)
    {
        // Handle the response (list of WebDavSessionListItems).
    }
}
          ]]>
        </code>

        <para>
          See the following example using a WebDavSession with untrusted SSL certificates (.NET Core):
        </para>
        <code language="c#">
          <![CDATA[
// Use the ServerCertificateCustomValidationCallback of HttpClientHandler to ignore certificate errors.
// This call should be done before trying to access any WebDAV resources, otherwise an exception will be thrown.
var httpClientHandler = new HttpClientHandler()
{
	PreAuthenticate = true,
	// Specify the user credentials.
	Credentials = new NetworkCredential("MyUsername", "MyPassword")
};

httpClientHandler.ServerCertificateCustomValidationCallback = (message, cert, chain, errors) => {
	// Specify which certificate errors should be ignored.
	if (errors == System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable)
		return true;
	else
		return false;
};

// The base URL (HTTPS) of the WebDAV server.
var webDavServerUrl = @"https://www.myserver.com/webdav/";

// Create a WebDavSession with the HttpBaseProtocolFilter.
using (var webDavSession = new WebDavSession(webDavServerUrl, httpClientHandler))
{
    var items = await webDavSession.ListAsync(@"MyFolder/");

    foreach (var item in items)
    {
        // Handle the response (list of WebDavSessionListItems).
    }
}
          ]]>
        </code>
      </content>
    </section>

    <relatedTopics>
      <link xlink:href="6eaaa932-6e58-4f05-82be-6bb1a0403612" />
    </relatedTopics>

  </developerConceptualDocument>
</topic>
