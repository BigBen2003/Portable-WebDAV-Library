<?xml version="1.0" encoding="utf-8"?>
<topic id="6eaaa932-6e58-4f05-82be-6bb1a0403612" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>This section provides some general information about the usage of the Portable WebDAV Library (UWP).</para>
    </introduction>

    <section>
      <title>Required app capabilities</title>
      <content>
        <para>To be able to use the Portable WebDAV Library in an (UWP) app, the capability <legacyItalic>Private Networks (Client &amp; Server)</legacyItalic> has to be specified in app's manifest (<legacyItalic>Package.appxmanifest</legacyItalic>).
        When this capability is missing, an exception will be thrown when trying to access WebDAV resources.
      </para>
        <mediaLink>
          <image xlink:href="AppCapabilities"/>
        </mediaLink>
      </content>
    </section>

    <section>
      <title>Using the library with expired/untrusted SSL certificates</title>
      <content>
        <para>
          The Portable WebDAV Library can also be used with WebDAV servers which use expired/untrusted certificates. This is a common scenario when using self-signed certificates, as these are not trusted.
        </para>
        <para>
          <legacyBold>Important:</legacyBold> It is up to the app using the Portable WebDAV Library to specify which certificate errors should be ignored. This can be accomplished by specifying a HttpBaseProtocolFilter when creating a WebDavSession or WebDavClient.
        </para>
        <para>
          See the following example using a WebDavSession:
        </para>
        <code language="c#">
        <![CDATA[
// The base URL (HTTPS) of the WebDAV server.
var webDavServerUrl = "https://www.myserver.com/webdav/";

// Specify the user credentials and pass it to a HttpBaseProtocolFilter.
var credentials = new PasswordCredential(webDavServerUrl, "MyUsername", "MyPassword");
var httpBaseProtocolFilter = new HttpBaseProtocolFilter();
httpBaseProtocolFilter.ServerCredential = credentials;

// Specify the certificate errors which should be ignored.
// It is recommended to only ignore expired or untrusted certificate errors.
// When an invalid certificate is used by the WebDAV server and these errors are not ignored, an exception will be thrown when trying to access WebDAV resources.
httpBaseProtocolFilter.IgnorableServerCertificateErrors.Add(ChainValidationResult.Expired);
httpBaseProtocolFilter.IgnorableServerCertificateErrors.Add(ChainValidationResult.Untrusted);

// Create a WebDavSession with the HttpBaseProtocolFilter.
var webDavSession = new WebDavSession(webDavServerUrl, httpBaseProtocolFilter);

var items = await webDavSession.ListAsync(@"MyFolder/");

foreach (var item in items)
{
        // Handle the response (list of WebDavSessionListItems).
}

webDavSession.Dispose();
          ]]>
        </code>
      </content>
    </section>

    <relatedTopics>
      
    </relatedTopics>
  </developerConceptualDocument>
</topic>
